{% import "@SyliusShop/Common/Macro/money.html.twig" as money %}

{% set itemsSubtotal = sylius_order_items_subtotal(order) %}
{% set taxIncluded = sylius_order_tax_included(order) %}
{% set taxExcluded = sylius_order_tax_excluded(order) %}

{% set orderPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT') %}
{% set orderPromotions = sylius_aggregate_adjustments(order.adjustmentsRecursively(orderPromotionAdjustment)) %}

{% set bonusPointsAdjustment = constant('BitBag\\SyliusBonusPointsPlugin\\Entity\\AdjustmentInterface::ORDER_BONUS_POINTS_ADJUSTMENT') %}
{% set bonusPointsTotal = order.getAdjustmentsTotal(bonusPointsAdjustment) %}

<tr>
    <td colspan="4">
        <strong>{{ 'sylius.ui.items_total'|trans }}:</strong> {{ money.convertAndFormat(itemsSubtotal) }}<br>
        {% if order.orderPromotionTotal != 0 %}
            {% for key, value in orderPromotions %}
                <strong>{{ 'sylius.ui.discount'|trans({'%s': key}) }}:</strong> {{ money.convertAndFormat(order.orderPromotionTotal) }}
            {% endfor %}<br>
        {% endif %}
        {% if bonusPointsTotal %}
            <strong>{{ 'bitbag_sylius_bonus_points.ui.bonus_points_total'|trans }}:</strong> {{ money.format(bonusPointsTotal, order.currencyCode) }}
        {% endif %}
        {% include '@SyliusShop/Account/Order/Details/Table/_shipping.html.twig' with {'order': order} %}<br>
        <span class="h3">{{ 'sylius.ui.total'|trans }}: {{ money.convertAndFormat(order.total) }}</span><br>
        {% if order.currencyCode is not same as(sylius.currencyCode) %}
            {{ 'sylius.ui.total_in_base_currency'|trans }}: {{ money.format(order.total, order.currencyCode) }}
        {% endif %}
    </td>
</tr>
