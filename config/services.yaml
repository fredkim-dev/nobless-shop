# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: services/ }

parameters:
    locale: fr_FR

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php,Twig,Validator}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    sylius.controller.shop.homepage:
        class: App\Controller\Shop\HomepageController
        arguments: ['@templating']

    sylius.controller.shop.product:
        class: App\Controller\Shop\ProductController
        arguments: [ '@templating']
        
    sylius.controller.shop.contact_custom:
        class: App\Controller\Shop\ContactController
        arguments: 
            - '@router'
            - '@form.factory'
            - '@templating'
            - '@sylius.context.channel'
            - '@sylius.context.customer'
            - '@sylius.context.locale'
            - '@sylius.email_manager.contact'
            - '@bitbag_sylius_cms_plugin.twig.extension.block'

    sylius.controller.shop.order_custom:
        class: App\Controller\Shop\OrderController
        arguments: ['@sylius.controller.order', '@sylius.context.customer', '@bitbag_sylius_product_bundle.repository.product_bundle_order_item']

    sylius.controller.shop.locale_switch:
        class: App\Controller\Shop\LocaleSwitchController
        arguments: ['@templating', '@sylius.context.locale', '@sylius.locale_provider', '@sylius.shop.locale_switcher']
    
    sylius.controller.shop.security:
        class: App\Controller\Shop\SecurityController
        arguments: ['@security.authentication_utils', '@form.factory', '@templating', '@security.authorization_checker', '@router']
    
    sylius.controller.shop.register:
        class: App\Controller\Shop\RegisterController
        arguments: ['@security.authentication_utils', '@form.factory', '@templating', '@security.authorization_checker', '@router']

    # Forms
    app.form.extension.cart:
        class: App\Form\Extension\CartTypeExtension
        decorates: App\Form\Extension\CartTypeExtension
        arguments:
            - '@bitbag_sylius_bonus_points.context.customer_bonus_points'
            - '@bitbag_sylius_bonus_points.resolver.bonus_points'
            - '@sylius.context.cart'
        tags:
            - { name: form.type_extension, extended_type: Sylius\Bundle\CoreBundle\Form\Type\CartType }

    #Grid Filters
    app.grid.filter.size:
        class: App\Grid\Filter\SizeFilter
        tags:
            -   name: sylius.grid_filter
                type: size
                form_type: App\Form\Type\Filter\SizeFilterType

    app.grid.filter.price:
        class: App\Grid\Filter\PriceFilter
        arguments: 
            -   '@doctrine.orm.entity_manager'
            -   "@request_stack"
            -   "@sylius.context.locale"
            -   "@sylius.repository.taxon"
        tags:
            -   name: sylius.grid_filter
                type: price
                form_type: App\Form\Type\Filter\PriceFilterType

    #Twig Extensions
    app.twig.extension.product_variants:
        class: App\Twig\Extension\ProductVariants
        arguments:
            - '@twig'
            - '@doctrine.orm.entity_manager'
            - '@bitbag_sylius_product_bundle.repository.product_bundle_order_item'
        tags:
            - { name: twig.extension }
                
    #Event Listener
    app.listener.cart_blamer:
        class: App\EventListener\CartBlamerListener
        decorates: sylius.listener.cart_blamer
        arguments:
            - '@sylius.manager.order'
            - '@sylius.context.cart'
            - '@sylius.context.cart.session_and_channel_based'

    #Bonus Points
    app.listener.admin.menu_builder:
        class: App\Menu\AdminMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: addAdminMenuItems }

    app.bonus_points_admin_builder:
        class: App\Menu\AdminBonusPointsBuilder
        decorates: bitbag_sylius_bonus_points.listener.menu.admin
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.mai, method: addItems }

    app.bonus_points_strategy_rule_checker.none:
        class: App\Checker\Rule\NoRuleChecker
        tags:
            - { name: bitbag.bonus_points_strategy_rule_checker, type: none, label: "No Rule", form_type: App\Form\Rule\NoRuleConfigurationType }

    app.form.type.rule.no_rule_configuration:
        class: App\Form\Rule\NoRuleConfigurationType
        tags:
            - { name: form.type }

    app.bonus_points_order_processor_custom:
        class: App\OrderProcessing\OrderBonusPointsProcessor
        decorates: App\OrderProcessing\OrderBonusPointsProcessor
        arguments:
            - '@bitbag_sylius_bonus_points.repository.bonus_points'
            - '@sylius.factory.adjustment'
            - '@doctrine.orm.entity_manager'
            - '@bitbag_sylius_bonus_points.context.customer_bonus_points'
    
    app.bonus_points_assigner_custom:
        class: App\Assigner\BonusPointsAssignerCustom
        decorates: bitbag_sylius_bonus_points.bonus_points_assigner
        arguments: 
            - '@bitbag_sylius_bonus_points.bonus_points_strategy_calculator'
            - '@bitbag_sylius_bonus_points.bonus_points_strategy_rules_eligibility_checker'
            - '@bitbag_sylius_bonus_points.repository.bonus_points_strategy'
            - '@bitbag_sylius_bonus_points.repository.bonus_points'
            - '@bitbag_sylius_bonus_points.factory.bonus_points'
            - '@bitbag_sylius_bonus_points.manager.bonus_points'
            - '@bitbag_sylius_bonus_points.repository.customer_bonus_points'
            - '@bitbag_sylius_bonus_points.factory.customer_bonus_points'
            - '@sylius.proportional_integer_distributor'
                
    app.bonus_points_availability_validator:
        class: App\Validator\Constraints\BonusPointsAvailabilityValidator
        decorates: bitbag_sylius_bonus_points.validator.bonus_points_availability
        arguments:
            - '@bitbag_sylius_bonus_points.resolver.bonus_points'
            - '@bitbag_sylius_bonus_points.repository.bonus_points'
        tags: 
            - { name: validator.constraint_validator }
        
